<Application x:Class="Kulagin.MasteringWPF.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:Kulagin.MasteringWPF"
             xmlns:DataModels="clr-namespace:Kulagin.MasteringWPF.DataModels;assembly=Kulagin.MasteringWPF.DataModels"
             xmlns:Views="clr-namespace:Kulagin.MasteringWPF.Views;assembly=Kulagin.MasteringWPF.Views"
             xmlns:ViewModels="clr-namespace:Kulagin.MasteringWPF.ViewModels;assembly=Kulagin.MasteringWPF.ViewModels"
             xmlns:Converters="clr-namespace:Kulagin.MasteringWPF.Converters;assembly=Kulagin.MasteringWPF.Converters"
             Startup="App_Startup">
    <Application.Resources>


        <!--Common Converters-->
        <Converters:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter" />
        <Converters:BoolToVisibilityConverter x:Key="InvertedBoolToVisibilityConverter" IsInverted="True" />
        <Converters:EnumToVisibilityConverter x:Key="InvertedEnumToVisibilityConverter" IsInverted="True" />
        <Converters:EnumToDescriptionStringConverter x:Key="EnumToDescriptionStringConverter" />


        <!--ViewModel Mappings-->
        <DataTemplate DataType="{x:Type ViewModels:BitRateViewModel}">
            <Views:BitRateView />
        </DataTemplate>
        <DataTemplate DataType="{x:Type ViewModels:WeightMeasurementsViewModel}">
            <Views:WeightMeasurementsView />
        </DataTemplate>
        <DataTemplate DataType="{x:Type ViewModels:AllUsersViewModel}">
            <Views:AllUsersView />
        </DataTemplate>       
        <DataTemplate DataType="{x:Type ViewModels:PanelViewModel}">
            <Views:PanelView />
        </DataTemplate>
        <DataTemplate DataType="{x:Type ViewModels:AdornerViewModel}">
            <Views:AdornerView />
        </DataTemplate> 
        <DataTemplate DataType="{x:Type ViewModels:ButtonViewModel}">
            <Views:ButtonView />
        </DataTemplate>


        <DataTemplate x:Key="UserTemplate" DataType="{x:Type DataModels:User}">
            <Border BorderBrush="Black" BorderThickness="1" CornerRadius="5" Padding="5" Margin="0,0,0,5">
                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="{Binding Name}" Margin="0,0,3,0" />
                    <TextBlock Text="{Binding Age, StringFormat={}({0})}" />
                </StackPanel>
            </Border>
        </DataTemplate>
        <DataTemplate x:Key="InverseUserTemplate" DataType="{x:Type DataModels:User}">
            <Border BorderBrush="White" BorderThickness="1" Background="Black"
                    TextElement.Foreground="White" CornerRadius="5" Padding="8,3,5,5"
                    Margin="0,0,0,5">
                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="{Binding Name}" Margin="0,0,3,0" />
                    <TextBlock Text="{Binding Age, StringFormat={}({0})}" />
                </StackPanel>
            </Border>
        </DataTemplate>


        <!--Control Templates-->
        <ControlTemplate x:Key="HiddenListBoxTemplate" TargetType="{x:Type ListBox}">
            <Border BorderThickness="0" BorderBrush="{x:Null}" SnapsToDevicePixels="True" Background="Transparent">
                <ScrollViewer VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Disabled" Focusable="False">
                    <ItemsPresenter Margin="0" />
                </ScrollViewer>
            </Border>
        </ControlTemplate>


        <Style x:Key="DemonstrationLabel" TargetType="{x:Type TextBlock}">
            <Setter Property="FontSize" Value="14" />
            <Setter Property="FontWeight" Value="SemiBold" />
            <Setter Property="HorizontalAlignment" Value="Center" />
            <Setter Property="Margin" Value="0,0,0,10" />
        </Style>


        <!--Colors-->
        <Color x:Key="PacktOrangeColor">#FFF36F25</Color>
        <Color x:Key="PacktBlackColor">#FF34383B</Color>


        <!--Brushes-->
        <SolidColorBrush x:Key="PacktOrange" Color="{StaticResource PacktOrangeColor}" />
        <SolidColorBrush x:Key="PacktBlack" Color="{StaticResource PacktBlackColor}" />


        <RadialGradientBrush x:Key="LayeredButtonBackgroundBrush" RadiusX="1.85" RadiusY="0.796" Center="1.018,-0.115" GradientOrigin="0.65,-0.139">
            <GradientStop Color="#FFCACACD" />
            <GradientStop Color="#FF3B3D42" Offset="1" />
        </RadialGradientBrush>

        <LinearGradientBrush x:Key="LayeredButtonCurveBrush" StartPoint="0,0" EndPoint="1,1">
            <GradientStop Color="#FF747475" Offset="0" />
            <GradientStop Color="#FF3B3D42" Offset="1" />
        </LinearGradientBrush>

        <Grid x:Key="LayeredButtonBackgroundElements">
            <Rectangle Fill="{StaticResource LayeredButtonBackgroundBrush}" />
            <Path StrokeThickness="0" Fill="{StaticResource LayeredButtonCurveBrush}">
                <Path.Data>
                    <CombinedGeometry GeometryCombineMode="Intersect">
                        <CombinedGeometry.Geometry1>
                            <EllipseGeometry Center="-20,50.7" RadiusX="185" RadiusY="46" />
                        </CombinedGeometry.Geometry1>
                        <CombinedGeometry.Geometry2>
                            <RectangleGeometry Rect="0,0,106,24" />
                        </CombinedGeometry.Geometry2>
                    </CombinedGeometry>
                </Path.Data>
            </Path>
        </Grid>

        <VisualBrush x:Key="LayeredButtonBackground" Visual="{StaticResource LayeredButtonBackgroundElements}" />

        <Style TargetType="{x:Type ListBoxItem}">
            <Setter Property="Padding" Value="0" />
            <Setter Property="Margin" Value="2,2,2,0" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                        <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="True">
                            <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="TextElement.Foreground" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <ControlTemplate x:Key="TextBoxControlTemplate" TargetType="{x:Type TextBox}">
            <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                <ScrollViewer x:Name="PART_ContentHost" Focusable="False" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                </Trigger>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="BorderBrush" TargetName="border" Value="#FF7EB4EA"/>
                </Trigger>
                <Trigger Property="IsKeyboardFocused" Value="True">
                    <Setter Property="BorderBrush" TargetName="border" Value="#FF569DE5"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

    </Application.Resources>
</Application>
